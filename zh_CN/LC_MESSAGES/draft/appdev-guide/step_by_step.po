# 
msgid ""
msgstr ""
"Project-Id-Version: Murano 1.0.0.0b1.54\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-21 22:16\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../draft/appdev-guide/step_by_step.rst:5
msgid "Step-by-Step"
msgstr "手把手教你"

#: ../../draft/appdev-guide/step_by_step.rst:7
msgid ""
"The goal of this manual is to walk you through the steps that should be "
"taken while composing an application package to get it ready for uploading "
"to Murano."
msgstr ""
"此文档的母的在于带领开发者们一步步的将自己的应用打包并上传到Murano。"

#: ../../draft/appdev-guide/step_by_step.rst:11
msgid ""
"This tutorial uses a demo application named ApacheHTTPServer to demonstrate "
"how you can create your own Murano application from scratch. We will walk "
"you through its source code and explain how to upload it."
msgstr ""
"此教程使用了名字叫ApacheHTTPServer道应用道示例来演示给你，如何从零开始创建自己"
"的Murano应用程序。我们会带领你进入其源码的世界，且会解释如何上传它。"

#: ../../draft/appdev-guide/step_by_step.rst:16
msgid ""
"ApacheHTTPServer is a simple Murano application that spawns a virtual "
"machine and installs Apache HTTP Server on it. It may also install php if a "
"user wants to."
msgstr ""
"ApacheHTTPServer是一个简单的Murano应用程序，其会生成一个虚拟机，然后在其中安装"
"Apache HTTP 服务。如果用户愿意的话也会安装PHP。"

#: ../../draft/appdev-guide/step_by_step.rst:20
msgid ""
"The source code of ApacheHTTPServer is available at `github "
"<https://github.com/openstack/murano-"
"apps/tree/master/ApacheHTTPServer/package>`_."
msgstr ""
"ApacheHTTPServer的源码托管在`github"
"<https://github.com/openstack/murano-"
"apps/tree/master/ApacheHTTPServer/package>`_上。"

#: ../../draft/appdev-guide/step_by_step.rst:23
msgid ""
"ApacheHTTPServer's source code is written in MuranoPL. This programming "
"language is object-oriented, and we will see classes, objects and object "
"instances. The detailed explanation of its syntax can be found in the "
":ref:`MuranoPL reference <murano-pl>`."
msgstr ""
"ApacheHTTPServer的源代码是使用MuranoPL语言写就的，此是一种面向对象的编程"
"语言，我们将会看到类、对象以及对象实例等。:ref:`MuranoPL reference <murano-pl>`"
"解释了此语言的细节，请参阅。"

#: ../../draft/appdev-guide/step_by_step.rst:30
msgid ""
"Before you start the Murano application creation process, please consider "
"the :ref:`System prerequisites <system_prerequisites>` and :ref:`Lab "
"requirements <lab_requirements>` in order you do not risk starting with a "
"wrong environment"
msgstr ""
"在你开始创建Murano应用程序的流程之前，请仔细阅读 :ref:`系统前提需求<system_prerequisites>` "
"和 :ref:`需求<system_prerequisites>` ，以降低搭建了错误的环境的风险。"


#: ../../draft/appdev-guide/step_by_step.rst:41
msgid "Step 1. Create the structure of the package"
msgstr "步骤1. 创建包的结构"

#: ../../draft/appdev-guide/step_by_step.rst:43
msgid ""
"You should structure an application package very neatly in order the "
"application could be managed and deployed in the catalog successfully."
msgstr ""
"你须整齐的组织应用程序包的结构，为了能够在将应用成功的部署和可管理。"

#: ../../draft/appdev-guide/step_by_step.rst:47
msgid "The package structure of ApacheHTTPServer package is::"
msgstr "ApacheHTTPServer的包的结构是::"

#: ../../draft/appdev-guide/step_by_step.rst:66
msgid ""
"The detailed information regarding the package structure can be found in the"
" `Murano packages structure <package_structure>`_ section."
msgstr ""
"关于包的结构的细节信息，请查阅`Murano包结构<package_structure>`_ section。"


#: ../../draft/appdev-guide/step_by_step.rst:71
msgid "Step 2. Create the manifest file"
msgstr "步骤 2. 创建manifest文件"

#: ../../draft/appdev-guide/step_by_step.rst:73
msgid ""
"The application manifest file contains general application metadata. It is "
"an entry-point for each Murano application, and is very similar to the "
"manifest of a jar archive. It has a fixed format based on YAML."
msgstr ""
"应用程序的manifest文件包含了通用的应用元数据。它是每个Murano应用的入口点，且"
"它非常类似于jar归档的manifest。它的固定格式基于YAML。"


#: ../../draft/appdev-guide/step_by_step.rst:77
msgid "The ApacheHTTPServer's manifest file:"
msgstr "ApacheHTTPServer的manifest文件:"

#: ../../draft/appdev-guide/step_by_step.rst:96
msgid "Now, let's inspect ``manifest.yaml`` line-by-line."
msgstr "现在，让我们逐行的检查``manifest.yaml``。"

#: ../../draft/appdev-guide/step_by_step.rst:99
msgid "Format"
msgstr "格式"

#: ../../draft/appdev-guide/step_by_step.rst:101
msgid ""
"Specifies the version of the format for manifest.yaml to track the syntax "
"changes. Format key presents in each manifest file. Currently, ``1.0`` is "
"the only available version:"
msgstr ""
"指定mainfest.xml格式的版本是跟踪语法的变更。在每个manifest文件中都有格式关键字，"
"目前，``1.0``是唯一可用的版本："

#: ../../draft/appdev-guide/step_by_step.rst:110
msgid "Type"
msgstr "类型"

#: ../../draft/appdev-guide/step_by_step.rst:112
msgid "Specifies the type of the package:"
msgstr "指定包的类型:"

#: ../../draft/appdev-guide/step_by_step.rst:119
msgid ""
"``Application`` starts with the capital letter. This is the naming "
"convention for all the pre-defined values in Murano code."
msgstr ""
"``应用``以大写字母开始。这是在Murano代码中预先定义的命名规范。"

#: ../../draft/appdev-guide/step_by_step.rst:124
msgid "FullName"
msgstr "全名"

#: ../../draft/appdev-guide/step_by_step.rst:126
msgid ""
"Stands for the unique service application name. That name allows to easily "
"recognize to which scope an application belongs. All other applications can "
"address to the Apache application methods by this name."
msgstr ""
"代表了唯一的服务应用名。此名允许简单的识别应用属于那个范畴。所有的其它应用"
"都可通过此名称来找到Apache应用。"

#: ../../draft/appdev-guide/step_by_step.rst:131
msgid ""
"To ensure the global uniqueness, the same naming convention as the naming "
"convention of Java packages and classes is followed. The "
"``io.murano.apps.apache.`` part is the \"package\" part of the name, while "
"``ApacheHttpServer`` stands for the \"class\" part of the name:"
msgstr ""
"要确保全局唯一，和Java包有着相同的命名规范和相应的类。``io.murano.apps.apache.``"
"部分是\"package\"名的一部分，``ApacheHttpServer``代表了名称的\"class\"部分："

#: ../../draft/appdev-guide/step_by_step.rst:142
msgid ""
"It is not necessary that all applications belong to one domain. This naming "
"allows to determine an application group by its name. Openstack-related "
"applications may have full names, started with ``org.openstack.apps``, for "
"example, ``org.openstack.apps.Rally``"
msgstr ""
"有必要将所有的应用归到同一个域下。此命名方式允许通过它的名称来决定应用的组。"
"OpenStack相关的应用有全名，以``org.openstack.apps``开头，例如，``org.openstack.apps.Rally``"


#: ../../draft/appdev-guide/step_by_step.rst:149
#: ../../draft/appdev-guide/step_by_step.rst:497
msgid "Name"
msgstr "名称"

#: ../../draft/appdev-guide/step_by_step.rst:151
msgid ""
"Stands for the display name of the application. You will be able to reset a "
"display name when you upload ApacheHTTPServer package to Murano:"
msgstr ""
"代表了应用程序所显示的名称。当你将ApacheHTTPServer包上传到Murano时，可以将此"
"显示的名称重置："

#: ../../draft/appdev-guide/step_by_step.rst:159
msgid "Description"
msgstr "描述"

#: ../../draft/appdev-guide/step_by_step.rst:161
msgid ""
"Contains the application decription rendered under the application title:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:175
msgid "Lets's take a closer look at the syntax:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:177
msgid ""
"The vertical line ``|`` symbol comes from YAML syntax. The ``>`` symbol can "
"be used interchangeably. These are the `YAML block style indicators "
"<http://yaml.org/spec/current.html#id2537921>`_, which mean that all the "
"leading indents and new line symbols should be preserved. This is very "
"useful for long, multi-line descriptions, because this affects how they are "
"desplayed on the UI."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:185
msgid ""
"Avoid tab symbols inside YAML files. If YAML contains the tab symbol, it "
"will not be parsed correctly. The error message may be cryptic or "
"misleading. We recommend that you check the YAML syntax before composing the"
" application package using any of the available online tools."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:192
msgid "Author"
msgstr "作者"

#: ../../draft/appdev-guide/step_by_step.rst:194
msgid ""
"Contains the name of the author of an application, it is only displayed in "
"the application details and does not affect anything."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:202
msgid ""
"Single quotes usage is optional here: ``Author: 'Mirantis, Inc'``, thus they"
" are omitted in the code extract below."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:207
msgid "Tags"
msgstr "标签"

#: ../../draft/appdev-guide/step_by_step.rst:209
msgid ""
"Is an array of tags. You can search an application by its tag. You may want "
"to specify several tags for one application:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:216
msgid ""
"Besides, YAML allows tag specification using another syntax, which is an "
"equivalent to the one given above:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:229
msgid "Classes"
msgstr "类"

#: ../../draft/appdev-guide/step_by_step.rst:231
msgid ""
"Is a mapping between all classes present in ApacheHttpServer application and"
" the file names where these classes are defined in. This is one-to-one "
"relatioonship, which means that there is one and the only class per a single"
" file."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:235
msgid ""
"The line ``io.murano.apps.apache.ApacheHttpServer: ApacheHttpServer.yaml`` "
"says that the class ``io.murano.apps.apache.ApacheHttpServer`` is defined in"
" the file ``ApacheHttpServer.yaml``:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:244
msgid "Step 3. Create the execution plan template"
msgstr "步骤 3. 创建执行计划模版"

#: ../../draft/appdev-guide/step_by_step.rst:246
msgid ""
"The execution plan template contains the instructions understandable to the "
"murano agent on what should be executed to deploy an application. It is the "
"file with the ``.template`` extension located in the ``/APP_NAME/resources``"
" directory."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:250
msgid "The ApacheHTTPServer's DeployApache.template:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:275
msgid ""
"As it can be viewed from the source code, besides specifying versions of "
"different items, ApacheHTTPServer execution plan accepts the ``enablePHP`` "
"parameter. This parameter is an input parameter to the ``apacheDeploy.sh`` "
"script. This script initiates ``runApacheDeploy.sh`` execution, witch is "
"also located at the ``Resources`` directory and installs apache app and php "
"if selected."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:281
msgid ""
"For the detailed information regarding the execution plan template, its "
"sections and syntax, please refer to the :ref:`Execution plan template "
"<exec_plan>`."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:286
msgid "Step 4. Create the dynamic UI form definition"
msgstr "步骤 4. 从定义创建动态的UI"

#: ../../draft/appdev-guide/step_by_step.rst:288
msgid "ApacheHTTPServer's ui.yaml source code:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:350
#: ../../draft/appdev-guide/step_by_step.rst:476
msgid "Now, let's inspect it line-by-line."
msgstr "现在，让我们逐行的来看源代码。"

#: ../../draft/appdev-guide/step_by_step.rst:353
msgid "Application"
msgstr "应用"

#: ../../draft/appdev-guide/step_by_step.rst:355
msgid ""
"Defines the object model by which engine deploys the ApacheHTTPServer "
"application, and includes YAQL expressions."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:358
msgid ""
"The section contains the reference to the Apache class, the one that is "
"provided in the manifest, named with the `?` symbol. This indicates system "
"information:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:369
msgid ""
"For ApacheHTTPServer application it is defined that the user should input "
"the application name, some instance parameters and decide whether PHP should"
" be enabled or not:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:376
msgid ""
"The `instance` section assumes that the value, entered by the user in the "
"first form named ``appConfiguration`` is stored in an application object "
"module. The same applies for the instance parameter. Providing the question "
"mark with the defined type ``io.murano.resources.LinuxMuranoInstance`` "
"indicates an instance of MuranoPl object."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:389
msgid ""
"This parameter is named ``instance`` here because its class definition "
"property has the ``instance`` name. You can specify any name in the "
":ref:`class definition file <step_5_class_definition>`, and then use it in "
"the UI form definition."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:395
msgid "Forms"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:397
msgid ""
"Contains UI forms prototypes that are merged to the application creation "
"wizard."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:400
msgid ""
"Each form field will be translated to the Django field and most of the "
"parameters correspond to parameters in the Django form field. All fields are"
" required by default. Hidden fields are used to print extra information in "
"the form description."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:405
msgid ""
"After the upload, the section content will be browsed on the left side of "
"the form and its description on the right."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:408
msgid ""
"Please take a look at the :guilabel:`Configure Application: Apache HTTP "
"Server` dialog:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:413
msgid ""
"The :guilabel:`assignFloatingIP` and :guilabel:`enablePHP` boolean fields "
"are shown as checkboxes."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:416
msgid "Here is how the second dialog looks like:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:424
msgid "Step 5: Define MuranoPL class definitions"
msgstr "步骤 5：定义 MuranoPl 类的定义"

#: ../../draft/appdev-guide/step_by_step.rst:426
msgid ""
"All application classes are located in the ``Classes`` folder. As "
"ApacheHttpServer uses only one class, just one file can be found in this "
"directory."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:429
msgid "Here is how it looks like:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:479
msgid "Namespaces"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:481
msgid ""
"Can be named *shortcuts* since this is an additional section which enables "
"short names instead of the long ones:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:494
msgid "``=:`` refers to the *current* namespace"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:499
msgid ""
"Contains the class name that is defined in this file. So full class name "
"will be current namespace and name, provided by corresponding key:  "
"``io.murano.apps.apache.ApacheHttpServer``:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:507
msgid "One .yaml file should contain only one class definition."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:510
msgid "Extends"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:512
msgid ""
"Determines inheritance, and ``io.murano.Application`` should be a parent for"
" all the murano applications."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:515
msgid ""
"This class has defined deploy method and only instances of that class can be"
" used in Environment class. Environment class, in its turn, is responsible "
"for the deployment configurations. Definition of both classes are located at"
" meta/io.murano folder of murano repository."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:519
msgid ""
"Thus, if you want to have some modifications of ApacheHttpServer, you can "
"set io.murano.apps.apache.ApacheHttpServer in the Extends section of a new "
"Application class:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:527
msgid "Properties"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:529
msgid ""
"Defines the dictionary. Apache HTTP Server application has three properties:"
" ``name``, ``enablePHP`` and ``instance``. For each of them certain "
"``Contract`` is defined."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:533
msgid ""
"Only ``enablePHP`` is optional, and its default value equals to ``false``."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:535
msgid ""
"``Instance`` is the required parameter and should be an instance of the "
"predefined in core library ``io.murano.resources.Instance`` class."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:538
msgid "Methods"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:540
msgid ""
"The ``initialize`` method is like ``__init__`` in Python, and executes "
"together with properties initialization."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:543
msgid ""
"It accesses the environment, which the application belongs to, and is used "
"only for sending reports about the deployment state."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:546
msgid "Private variable ``_environment`` is defined as follows:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:555
msgid ""
"The ``deploy`` method sets up instance spawning and configuration. This "
"method should be executed only once. So in the first order deployed variable"
" is checked to be false in the current scope."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:559
msgid "It performs the following actions:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:561
msgid "configures securityGroups;"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:562
msgid "initiates new virtual machine spawning: ``$.instance.deploy()``"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:563
msgid ""
"loads the execution plan template, located in the ``Resources`` directory to"
" the instance of resources class: "
"``$resources.yaml('DeployApache.template')``"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:565
msgid ""
"updates the plan with parameters taken from the user: ``bind(dict(enablePHP "
"=> $.enablePHP))``"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:566
msgid ""
"sends ready-to-execute-plan to murano agent: "
"``$.instance.agent.call($template, $resources)``"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:570
msgid "Step 6. Add the application logo (optional)"
msgstr "步骤 6. 添加应用程序logo (可选)"

#: ../../draft/appdev-guide/step_by_step.rst:572
msgid ""
"Download or create your own ``.png`` image associated with your application."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:574
msgid ""
"The recommended size is 70x70 px, and the square shape is preferable. There "
"are no limits regarding the image filename. In Apache HTTP Server we use the"
" default name ``logo.png``:"
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:582
msgid "Step 7.  Compose a zip archive"
msgstr "步骤 7. 组成一个zip压缩文件"

#: ../../draft/appdev-guide/step_by_step.rst:584
msgid ""
"Select all the files prepared for the package and create an archive in zip "
"format. If the command is executed from the console, do not forget to add "
"the ``-r`` option to include all the attachments."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:589
msgid ""
"The manifest file should not contain the root folder. In other words, the "
"manifest should be located in the archive root directory."
msgstr ""

#: ../../draft/appdev-guide/step_by_step.rst:594
msgid ""
"**Congratulations! Your application is ready to be uploaded to the "
"application catalog.**"
msgstr ""
